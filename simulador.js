const axios = require('axios');

const dadosBase64 = `\`;

const URL_DO_WEBHOOK = 'http://localhost:3000/webhook';

async function enviarTeste() {
    try {
        console.log('Enviando teste para o webhook...');

        const params = new URLSearchParams();
        params.append('data', dadosBase64);

        const resposta = await axios.post(URL_DO_WEBHOOK, params)

        console.log('Resposta do webhook:', resposta.data);
    } catch (error) {
        console.error('Erro ao enviar teste para o webhook:', error.message);
    }
}

enviarTeste();